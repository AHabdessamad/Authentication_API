@page "/register"
@inject AuthenticationStateProvider authProvider
@layout EmptyLayout
@inject NavigationManager navigationManager

<EditForm Model="@user" OnValidSubmit="HandleRegister">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="row mt-5">
        <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
            <div class="mb-3 text-center">
                <h3>REGISTER</h3>
            </div>
            <div class="mb-3">
                <label>User Name</label>
                <input class="form-control" id="username" @bind="user.Username" placeholder="User Name" />
            </div>
            <div class="mb-3">
                <label>Email</label>
                <input class="form-control" id="email" @bind="user.Email" placeholder="Enter your mail address" />
            </div>
            <div class="mb-3">
                <label>Password</label>

                <input type="password" id="password" @bind="user.Password" class="form-control" placeholder="Password" />
            </div>
            <div class="mb-3 d-grid gap-2">
                <button type="submit" class="btn btn-primary">Register</button>
            </div>
        </div>
    </div>
</EditForm>
@code {
    RegisterDTO user = new RegisterDTO();

    public async void HandleRegister()
    {
        var customAuthService = (CustomAuthService)authProvider;
        var result = await customAuthService.RegisterAsync(user);

        if (result.IsSuccess)
        {
            Console.WriteLine(result.Message);
            navigationManager.NavigateTo("/login");
        }
    }

}
